#!/usr/bin/env php
<?php

use cleanphp\App;
use cleanphp\release\Release;


define("BASE_DIR", dirname(__DIR__, 2));
function help()
{
    echo <<<EOF
Usage: ./clean [options] 
Options:
  release                       发布安装包.
    -v,--version                发布版本
    -n,--name					发布的名称
    -f,--file					指定发布时调用的php文件
  start  [<m>/<c>/<a>]          命令行模式下执行controller               
EOF;
    return null;
}


if (!isset($argv[1]))
    return help();

switch ($argv[1]) {
    case "release":
        spl_autoload_register(function ($raw) {
            $real_class = str_replace("\\", DIRECTORY_SEPARATOR, $raw) . ".php";
            //拼接类名文件
            $file = dirname(__DIR__,2). DIRECTORY_SEPARATOR . $real_class;
            //存在就加载
            if (file_exists($file)) {
                include $file;
            }
        }, true, true);


        $version = "0.0.1";
        $name = "main";
        $file = "";
        foreach ($argv as $value){
            switch (substr($value,0,2)){

                case "-v":$version = substr($value,3);break;
                case "-n":$name = substr($value,3);break;
                case "-f":$file = substr($value,3);break;
            }
        }
        Release::package($name,$version,$file);
        break;
    case "start":
        $_SERVER["REQUEST_URI"] = $argv[2] ?? "";
        $_SERVER["HTTP_HOST"] = "localhost";
        define('APP_DIR', dirname(__FILE__));//定义运行根目录
        require_once APP_DIR . DIRECTORY_SEPARATOR . "cleanphp" . DIRECTORY_SEPARATOR . "App.php";
        App::run(true);
        break;
    default:
        help();
}